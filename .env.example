# ===== MyWeb 环境变量示例（合并了 Docker 与开发示例，供复制为 .env 使用） =====
# 说明：请复制本文件为 `.env`（不应提交包含敏感信息的 .env 到仓库），
#       并根据运行环境（开发/测试/生产）修改变量值。

######################### 基本运行 / 端口 #########################
# 前端开发服务器端口（仅在本地使用 Vite dev 时生效）
FRONTEND_PORT=3000

# 后端对外暴露的宿主机端口（docker-compose 会将宿主机端口映射到容器内的 3000）
# 使用场景：如果您希望宿主机的 3001 映射到容器内的 3000，请设置 BACKEND_PORT=3001
BACKEND_PORT=10010

# 为兼容旧配置，优先使用 PORT（许多工具默认读取 PORT），若未设置则使用 BACKEND_PORT
PORT=10010

# 宿主机端口映射的可选变量（部署脚本健康检查使用）
FRONTEND_HOST_PORT=3000

######################### 容器名与项目名 #########################
BACKEND_CONTAINER_NAME=myweb-backend

########## 前端相关（Vite / 运行时注入变量） ##########
# Vite 前端构建/运行时使用的 API 前缀（如果前端与后端同域，保留 '/api' 即可）
VITE_API_BASE=/api

# 如果需要前端 dev server 代理到后端，您可以设置 VITE_BACKEND_PORT（会被 vite.config 使用）
VITE_BACKEND_PORT=3000

# 可选：前端 dev server 代理目标（形如 host:port）。不设置时按 BACKEND_PORT 推断为 localhost:${BACKEND_PORT}
# 仅开发环境有用（vite.config.js 中使用）。
# BACKEND_HOST=

######################### 部署 / Docker 相关 #########################
# 构建时控制项
# SKIP_SERVER_NPM_INSTALL=1 可跳过容器内的 server npm install（用于本地提前安装依赖以加速构建）
SKIP_SERVER_NPM_INSTALL=0
USE_LOCAL_CLIENT=0
LOCAL_CLIENT_BUILD_PATH=

# Docker / Compose 项目名与 BuildKit，当DOCKER_BUILDKIT=1时启用BuildKit
COMPOSE_PROJECT_NAME=myweb
DOCKER_BUILDKIT=1

# 部署域名（用于 Traefik/Nginx 等反代规则）
DOMAIN=localhost
NGINX_PORT=80
NGINX_HTTPS_PORT=443

######################### 数据库 / 持久化 #########################
# SQLite 数据文件路径（容器内路径，通常由 volume 挂载覆盖）
DB_PATH=/app/server/data/myweb.db

######################### 安全（生产请替换） #########################
# 当前版本后端未使用会话/JWT 密钥，这里移除以避免误导。

######################### 日志 / 性能 #########################
# CORS 允许来源（后端 CORS 配置使用）。
# 例如开发可设为 * 或 http://localhost:3000。
CORS_ORIGIN=*

# 接口速率限制（每 15 分钟内允许的最大请求数），后端读取 RATE_LIMIT。
RATE_LIMIT=1000

# 说明结束：
# - 将本文件复制为 .env 并根据需要修改。
# - 对于生产环境，建议在部署主机上使用环境变量注入敏感信息（例如 SESSION_SECRET / JWT_SECRET），
#   或使用安全的 secrets 管理服务（Kubernetes Secrets / HashiCorp Vault 等）。
