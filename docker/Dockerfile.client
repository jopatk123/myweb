FROM node:18-alpine as builder

# 设置工作目录
WORKDIR /app

# 可选：如果在构建时传入 USE_LOCAL_CLIENT=1，则会跳过安装与构建，期望构建上下文中已经包含 client/dist
ARG USE_LOCAL_CLIENT=0

# 复制package.json
COPY client/package*.json ./

# 安装依赖（可选跳过，当 USE_LOCAL_CLIENT=1 时跳过）
RUN if [ "${USE_LOCAL_CLIENT:-0}" = "1" ]; then \
			echo "USE_LOCAL_CLIENT=1 - skipping npm install"; \
		else \
			npm install --no-audit --no-fund; \
		fi

# 复制源代码（如果构建上下文带有 client/dist，COPY 会把其一起带入）
COPY client/ .

# 构建应用（可选跳过，当 USE_LOCAL_CLIENT=1 时跳过，期望 client/dist 已存在于构建上下文）
RUN if [ "${USE_LOCAL_CLIENT:-0}" = "1" ]; then \
			echo "USE_LOCAL_CLIENT=1 - skipping npm run build"; \
		else \
			npm run build; \
		fi

# 生产阶段
FROM nginx:alpine

# 复制构建文件
COPY --from=builder /app/dist /usr/share/nginx/html

# 复制nginx配置
COPY docker/nginx.conf.template /etc/nginx/templates/default.conf.template

# 创建uploads目录
RUN mkdir -p /usr/share/nginx/uploads

# 暴露端口
EXPOSE 80

# 启动nginx
CMD ["nginx", "-g", "daemon off;"]